package AboutNet;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;

public class UdpServer {
	public static final int PORT = 30000;
	private static final int DATA_LEN = 4096;
	byte[] inBuff = new byte[DATA_LEN];
	private DatagramPacket inPacket = new DatagramPacket(inBuff,inBuff.length);
	private DatagramPacket outPacket;
	String[] books = new String[] {"java讲义","java EE","android","Ajax"};
	
	public void init()throws IOException{
		try(
			DatagramSocket socket = new DatagramSocket(PORT))
		{
			for(int i =0;i<100;i++){
				//读取socket中的数据,读到的数据放入到inPacket封装的数组里
				socket.receive(inPacket);
				//判断inPacket.getData()和inBuff是否是同一个数组
				System.out.println(inBuff==inPacket.getData());
				//将接收到的内容转换成字符串后输出
				System.out.println(new String(inBuff,0,inPacket.getLength()));
				//从字符串数组中取出一个元素作为发送数据
				byte[] sendData = books[i%4].getBytes();
				//以指定的字节数组作为发送数据,以刚接受到的DatagramePacket的源SocketAddress作为目标SocketAddress创建DatagramPacket
				outPacket = new DatagramPacket(sendData,sendData.length,inPacket.getSocketAddress());
				socket.send(outPacket);
			}
		} 
		
	}
	public static void main(String[] args)throws IOException {
		new UdpServer().init();
	}

}
