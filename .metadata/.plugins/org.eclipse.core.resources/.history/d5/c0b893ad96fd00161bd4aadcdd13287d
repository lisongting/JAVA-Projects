package list;
//双链表
public class DoubleLinkList<T> {

	private class Node{
		private T data;
		private Node prev;
		private Node next;
		public Node(){};
		public Node(T data,Node prev,Node next){
			this.data = data;
			this.prev = prev;
			this.next = next;
		}
	}
	private Node header;
	private Node tail;
	private int size = 0;
	public DoubleLinkList(){
		header = tail = null;
	}
	public DoubleLinkList(T element){
		header  = new Node(element,null,null);
		tail = header;
		size ++;
	}
	public int length(){
		return size;
	}
	public boolean isEmpty(){
		return 0 == size;
	}
	//获取下标为index的节点的值
	public T get(int index){
		return getNodeByIndex(index).data;
	}
	//根据索引查找节点
	public Node getNodeByIndex(int index){
		if(index < 0 || index > size-1){
			throw new IndexOutOfBoundsException("链表索引越界");
		}
		if(index <= size/2){
			Node current = header;
			for(int i=0;i<=size/2 && current != null;i++){
				if(i == index){
					return current;
				}
				current = current.next;
			}
		}else{
			Node current = tail;
			for(int i=size -1;i>size/2&&current!=null ;i++){
				if(i == index){
					return current;
				}
				current = current.prev;
			}
		}
		return null;
	}
	
	//根据值查找索引值
	public int locate(T element){
		Node current = header;
		for(int i=0;i<size-1 && current != null;i++){
			if(element.equals(current.data)){
				return i;
			}
			current = current.next;
		}
		return -1;
	}
	//向指定索引处插入插入元素
	public void insert(T element,int index){
		if(index < 0 || index > size-1){
			throw new IndexOutOfBoundsException("链表索引越界");
		}
		
		
	}
	public static void main(String[] args) {
		
		

	}

}
