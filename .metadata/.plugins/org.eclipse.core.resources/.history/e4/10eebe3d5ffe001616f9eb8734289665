package binarytree;
//二叉链表树
public class BinaryTree<T> {
	class Node{
		T data;
		Node left;
		Node right;
		public Node(){};
		public Node(T data){
			this.data = data;
		}
		public Node(T data, Node left, Node right){
			this.data = data;
			this.left = left;
			this.right = right;
		}
	}
	
	private Node root;
	public BinaryTree(){
		root = new Node();
	}
	public BinaryTree(T data){
		root = new Node(data,null,null);
	}
	//为指定节点添加子节点
	public Node addNode(Node parent,T data,boolean isLeft){
		if(parent == null){
			throw new RuntimeException("parent节点为null,无法添加子节点");
		}
		if(isLeft && parent.left!=null){
			throw new RuntimeException("parent已有左子节点,无法添加子节点");
		}
		if(!isLeft && parent.right!=null){
			throw new RuntimeException("parent已有右子节点,无法添加子节点");
		}
		if(isLeft){
			parent.left = new Node(data);
		}else{
			parent.right = new Node(data);
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
