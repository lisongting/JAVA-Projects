package queue;
//顺序队列
public class SequenceQueue<T> {
	private int DEFAULT_SIZE;
	private int capacity;
	private Object[] elementData;
	//保存顺序队列中元素的当前个数
	private int front = 0;
	private int rear = 0;
	public SequenceQueue(){
		capacity = DEFAULT_SIZE;
		elementData = new Object[capacity];
	}
	public SequenceQueue(T element){
		this();
		elementData = new Object[capacity];
		rear++;
	}
	public SequenceQueue(T element, int initSize){
		this.capacity = initSize;
		elementData = new Object[capacity];
		elementData[0] = element;
	}
	public static void main(String[] args) {
		int[][] array = new int[3][5];
		System.out.println(array.length);
		System.out.println(array[0].length);
	}
	public boolean find(int target,int[][] array){
		int row = array.length;
		int col = array[0].length;
		//进行区间查找
		int startInRow=0,endInRow = 0;
		int startInCol=0,endInCol = 0;
		for(int i=0;i<row;i++){
			if((array[i][0]<=target)&&(array[i+1][0]>=target)){
				startInRow = i;
				endInRow = i+1;
				break;
			}
		}
		for(int j=0;j<col;j++){
			if((array[0][j]<=target)&&(array[0][j+1]>=target)){
				startInCol = j;
				endInCol = j+1;
				break;
			}
		}
		for(int i=startInRow;i<=endInRow;i++){
			for(int j=startInCol;j<=endInCol;j++){
				if(array[i][j]==target){
					return true;
				}
			}
		}
		return false;
	}
}
