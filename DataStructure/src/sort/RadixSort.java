package sort;

import java.util.Arrays;

/**
 * 基数排序
 * 时间复杂度：平均O(k*n),k是位数个数。  最坏O(n*n) 
 * 空间复杂度:O(rd+n),r是关键码取值范围(如0-9，r是10),d是最长的位数
 * 稳定性：稳定
 * [分析]将待排序的数据拆分成多个关键字，然后根据子关键字
 * 对数据进行排序
 * @author Administrator
 */
public class RadixSort {
	//maxLen代表最大的数有多少位
	public static void radixSort(int[] array,int maxLen){
		int a = 0;//数组array下标的标记符
		int n =1;//n=1代表比较元素的个位，n=10代表比较元素的十位
		int m =1;//控制键值排序依据在哪一位
		//构造一个辅助二维数组，第一维代表可能的余数，第二维用来存放
		//数组中余数相同的元素
		int[][] tmp = new int[10][array.length];
		//order代表同余数组
		//0-9,表示余数为0-9的元素的个数
		//余数为i的有h个，则order[i]=h。
		int[] order = new int[10];
		
		while(m <= maxLen){
			for(int i=0;i<array.length;i++){
				int lsd = (array[i]/n)%10;//n=1时，先取出个位
				//将这个元素放在tmp这个二维数组中
				tmp[lsd][order[lsd]] = array[i];
				order[lsd]++;//order数组中的记录加一
			}
			//[Debug]输出tmp数组看看
			System.out.println("该趟比较的位："+n+"。tmp数组如下：");
			for(int i=0;i<10;i++){
				for(int j=0;j<array.length;j++){
					System.out.print(tmp[i][j]+" ");
				}
				System.out.println();
			}
			
			System.out.println("array数组变化为：");
			for(int i=0;i<10;i++){
				//如果有余数为i的数
				if(order[i]!=0){
					for(int j=0;j<order[i];j++){
						//将tmp数组中的元素重新放到array中，完成对array的重排序
						//?这里还有点费解
						array[a] = tmp[i][j];
						a++;
					}
					System.out.println(Arrays.toString(array));
				}
				order[i] = 0;
			}
			n = n*10;
			a = 0;
			m++;
			
		}
	}
	public static void main(String[] args) {
		int[] array = new int[]{9,288,5,156,23,2,103,0,21,1007,98,30,13};
		System.out.println("排序前：\n"+Arrays.toString(array));
		System.out.println("开始排序：");
		radixSort(array,4);
		System.out.println("排序后：\n"+Arrays.toString(array));
	}
	/**[运行结果]
	 排序前：
	[9, 288, 5, 156, 23, 2, 103, 0, 21, 1007, 98, 30, 13]
	开始排序：
	该趟比较的位：1。tmp数组如下：
	0 30 0 0 0 0 0 0 0 0 0 0 0 
	21 0 0 0 0 0 0 0 0 0 0 0 0 
	2 0 0 0 0 0 0 0 0 0 0 0 0 
	23 103 13 0 0 0 0 0 0 0 0 0 0 
	0 0 0 0 0 0 0 0 0 0 0 0 0 
	5 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	1007 0 0 0 0 0 0 0 0 0 0 0 0 
	288 98 0 0 0 0 0 0 0 0 0 0 0 
	9 0 0 0 0 0 0 0 0 0 0 0 0 
	array数组变化为：
	[0, 30, 5, 156, 23, 2, 103, 0, 21, 1007, 98, 30, 13]
	[0, 30, 21, 156, 23, 2, 103, 0, 21, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 2, 103, 0, 21, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 103, 13, 0, 21, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 103, 13, 5, 21, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 103, 13, 5, 156, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 103, 13, 5, 156, 1007, 98, 30, 13]
	[0, 30, 21, 2, 23, 103, 13, 5, 156, 1007, 288, 98, 13]
	[0, 30, 21, 2, 23, 103, 13, 5, 156, 1007, 288, 98, 9]
	该趟比较的位：10。tmp数组如下：
	0 2 103 5 1007 9 0 0 0 0 0 0 0 
	13 0 0 0 0 0 0 0 0 0 0 0 0 
	21 23 0 0 0 0 0 0 0 0 0 0 0 
	30 103 13 0 0 0 0 0 0 0 0 0 0 
	0 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	1007 0 0 0 0 0 0 0 0 0 0 0 0 
	288 98 0 0 0 0 0 0 0 0 0 0 0 
	98 0 0 0 0 0 0 0 0 0 0 0 0 
	array数组变化为：
	[0, 2, 103, 5, 1007, 9, 13, 5, 156, 1007, 288, 98, 9]
	[0, 2, 103, 5, 1007, 9, 13, 5, 156, 1007, 288, 98, 9]
	[0, 2, 103, 5, 1007, 9, 13, 21, 23, 1007, 288, 98, 9]
	[0, 2, 103, 5, 1007, 9, 13, 21, 23, 30, 288, 98, 9]
	[0, 2, 103, 5, 1007, 9, 13, 21, 23, 30, 156, 98, 9]
	[0, 2, 103, 5, 1007, 9, 13, 21, 23, 30, 156, 288, 9]
	[0, 2, 103, 5, 1007, 9, 13, 21, 23, 30, 156, 288, 98]
	该趟比较的位：100。tmp数组如下：
	0 2 5 1007 9 13 21 23 30 98 0 0 0 
	103 156 0 0 0 0 0 0 0 0 0 0 0 
	288 23 0 0 0 0 0 0 0 0 0 0 0 
	30 103 13 0 0 0 0 0 0 0 0 0 0 
	0 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	1007 0 0 0 0 0 0 0 0 0 0 0 0 
	288 98 0 0 0 0 0 0 0 0 0 0 0 
	98 0 0 0 0 0 0 0 0 0 0 0 0 
	array数组变化为：
	[0, 2, 5, 1007, 9, 13, 21, 23, 30, 98, 156, 288, 98]
	[0, 2, 5, 1007, 9, 13, 21, 23, 30, 98, 103, 156, 98]
	[0, 2, 5, 1007, 9, 13, 21, 23, 30, 98, 103, 156, 288]
	该趟比较的位：1000。tmp数组如下：
	0 2 5 9 13 21 23 30 98 103 156 288 0 
	1007 156 0 0 0 0 0 0 0 0 0 0 0 
	288 23 0 0 0 0 0 0 0 0 0 0 0 
	30 103 13 0 0 0 0 0 0 0 0 0 0 
	0 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	156 0 0 0 0 0 0 0 0 0 0 0 0 
	1007 0 0 0 0 0 0 0 0 0 0 0 0 
	288 98 0 0 0 0 0 0 0 0 0 0 0 
	98 0 0 0 0 0 0 0 0 0 0 0 0 
	array数组变化为：
	[0, 2, 5, 9, 13, 21, 23, 30, 98, 103, 156, 288, 288]
	[0, 2, 5, 9, 13, 21, 23, 30, 98, 103, 156, 288, 1007]
	排序后：
	[0, 2, 5, 9, 13, 21, 23, 30, 98, 103, 156, 288, 1007] 
	 */
}
